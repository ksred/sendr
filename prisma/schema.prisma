// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  preferences   Json?
  sessions      Session[]
  trades        Trade[]
  messages      Message[]
  balances      Balance[]
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  active       Boolean  @default(true)
  lastActivity DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id])
}

model Trade {
  id            String    @id @default(cuid())
  userId        String
  fromCurrency  String
  toCurrency    String
  amount        Float
  rate          Float
  status        String    // INIT, PROCESSING, COMPLETED, FAILED
  createdAt     DateTime  @default(now())
  completedAt   DateTime?
  user          User      @relation(fields: [userId], references: [id])
  messages      Message[]
}

model Message {
  id        String   @id @default(cuid())
  userId    String
  tradeId   String?
  type      String   // USER_INPUT, SYSTEM_MESSAGE, LLM_RESPONSE, TRADE_UPDATE, RATE_ALERT, ACTION_PROMPT
  content   String
  metadata  Json?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  trade     Trade?   @relation(fields: [tradeId], references: [id])
}

model Balance {
  id        String   @id @default(cuid())
  userId    String
  currency  String
  amount    Float
  held      Float    @default(0)
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, currency])
}
